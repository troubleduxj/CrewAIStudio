version: '3.8'

services:
  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: crewai-studio-backend
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=sqlite:///./crewai_studio.db
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=false
      # CrewAI API密钥（可选，在生产环境中设置）
      # - OPENAI_API_KEY=${OPENAI_API_KEY}
      # - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      # - CREWAI_API_KEY=${CREWAI_API_KEY}
    volumes:
      - ./backend/crewai_studio.db:/app/crewai_studio.db
      - backend_logs:/app/logs
    networks:
      - crewai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: crewai-studio-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_TELEMETRY_DISABLED=1
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - crewai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# 网络配置
networks:
  crewai-network:
    driver: bridge
    name: crewai-studio-network

# 数据卷配置
volumes:
  backend_logs:
    name: crewai-studio-backend-logs